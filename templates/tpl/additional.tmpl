type {{ .StructName }}Option{{if .GenericParams}}[{{range $index, $param := .GenericParams}}{{if $index}}, {{end}}{{$param.Name}} {{$param.Type}}{{end}}]{{end}} interface {
	apply(*{{ .StructName }}{{if .GenericParams}}[{{range $index, $param := .GenericParams}}{{if $index}}, {{end}}{{$param.Name}}{{end}}]{{end}})
}

func New{{ .StructName }}{{if .GenericParams}}[{{range $index, $param := .GenericParams}}{{if $index}}, {{end}}{{$param.Name}} {{$param.Type}}{{end}}]{{end}}({{ range $index, $field := .Fields }}{{ $field.Name | bigCamelToSmallCamel }} {{ $field.Type }},{{ end }} opts ...{{ $.StructName }}Option{{if .GenericParams}}[{{range $index, $param := .GenericParams}}{{if $index}}, {{end}}{{$param.Name}}{{end}}]{{end}}) *{{ .StructName }}{{if .GenericParams}}[{{range $index, $param := .GenericParams}}{{if $index}}, {{end}}{{$param.Name}}{{end}}]{{end}} {
	{{ .NewStructName }} := &{{ .StructName }}{{if .GenericParams}}[{{range $index, $param := .GenericParams}}{{if $index}}, {{end}}{{$param.Name}}{{end}}]{{end}}{
		{{ range $index, $field := .Fields }}{{ $field.Name }}: {{ $field.Name | bigCamelToSmallCamel }},
		{{ end }}
	}


	for _, opt := range opts {
		opt.apply({{ .NewStructName }})
	}

	return {{ .NewStructName }}
}


{{ if .OptionalFields }}
{{ range $field := .OptionalFields }}

{{/*字段名称 首字母小写*/}}
{{ $firstLetterToLower :=  $field.Name | bigCamelToSmallCamel }}

{{/*字段名称 首字母大写*/}}
{{ $firstLetterToUpper :=  $field.Name | capitalizeFirstLetter }}

{{/*字段名称 获取小写首字母*/}}
{{ $firstLetter :=  $field.Name | getFirstLetter }}

/**
 * field name: {{ $field.Name}}
 */
type {{ $field.Name}}{{if $.GenericParams}}[{{range $index, $param := $.GenericParams}}{{if $index}}, {{end}}{{$param.Name}} {{$param.Type}}{{end}}]{{end}} struct {
	{{ $firstLetterToLower }} {{ $field.Type }}
}

// apply the {{ $field.Name }} option to the given struct.
func ({{ $firstLetter }} {{ $field.Name}}{{if $.GenericParams}}[{{range $index, $param := $.GenericParams}}{{if $index}}, {{end}}{{$param.Name}}{{end}}]{{end}}) apply (opt *{{ $.StructName }}{{if $.GenericParams}}[{{range $index, $param := $.GenericParams}}{{if $index}}, {{end}}{{$param.Name}}{{end}}]{{end}}) {
	opt.{{ $field.Name }} = {{ $firstLetter }}.{{ $firstLetterToLower }}
}


// With{{ $firstLetterToUpper }} Option.
func With{{ $firstLetterToUpper }}{{if $.GenericParams}}[{{range $index, $param := $.GenericParams}}{{if $index}}, {{end}}{{$param.Name}} {{$param.Type}}{{end}}]{{end}}(opt{{ $firstLetterToUpper }} {{ $field.Type }}) {{ $.StructName }}Option{{if $.GenericParams}}[{{range $index, $param := $.GenericParams}}{{if $index}}, {{end}}{{$param.Name}}{{end}}]{{end}} {
	return {{ $field.Name}}{{if $.GenericParams}}[{{range $index, $param := $.GenericParams}}{{if $index}}, {{end}}{{$param.Name}}{{end}}]{{end}}{
        {{ $firstLetterToLower }}: opt{{ $firstLetterToUpper }},
    }
}


{{ end }}
{{ end }}
